// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NardSmena.Models;

#nullable disable

namespace NardSmena.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", "dbo");
                });

            modelBuilder.Entity("NardSmena.Models.BRab_Korr", b =>
                {
                    b.Property<int>("NomStr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NomStr"));

                    b.Property<int>("ExtNom")
                        .HasColumnType("int");

                    b.Property<double>("KTU")
                        .HasColumnType("float");

                    b.Property<short>("KodOpl")
                        .HasColumnType("smallint");

                    b.Property<short>("Moon")
                        .HasColumnType("smallint");

                    b.Property<short>("NNariada")
                        .HasColumnType("smallint");

                    b.Property<double>("SumAll")
                        .HasColumnType("float");

                    b.Property<int>("TabNomer")
                        .HasColumnType("int");

                    b.Property<int>("TabelId")
                        .HasColumnType("int");

                    b.Property<double>("TimeAll")
                        .HasColumnType("float");

                    b.HasKey("NomStr");

                    b.HasIndex("ExtNom");

                    b.ToTable("BRab_Korr", "dbo");
                });

            modelBuilder.Entity("NardSmena.Models.Bnard", b =>
                {
                    b.Property<int>("ExtNom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExtNom"));

                    b.Property<short>("KodOpl")
                        .HasColumnType("smallint");

                    b.Property<short>("Moon")
                        .HasColumnType("smallint");

                    b.Property<short>("NNariada")
                        .HasColumnType("smallint");

                    b.Property<string>("NameNariada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Selected")
                        .HasColumnType("tinyint");

                    b.Property<double>("SummAll")
                        .HasColumnType("float");

                    b.Property<double>("TimeAll")
                        .HasColumnType("float");

                    b.HasKey("ExtNom");

                    b.ToTable("Bnard", "dbo");
                });

            modelBuilder.Entity("NardSmena.Models.BnardStr", b =>
                {
                    b.Property<int>("NomStr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NomStr"));

                    b.Property<double>("Count")
                        .HasColumnType("float");

                    b.Property<short>("Day")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Days")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExtNom")
                        .HasColumnType("int");

                    b.Property<string>("KodiOperation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rascenka")
                        .HasColumnType("float");

                    b.Property<string>("ShifrDetal")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Time")
                        .HasColumnType("float");

                    b.HasKey("NomStr");

                    b.HasIndex("ExtNom");

                    b.HasIndex("ShifrDetal");

                    b.ToTable("BnardStr", "dbo");
                });

            modelBuilder.Entity("NardSmena.Models.BnardStr_Sproper", b =>
                {
                    b.Property<int>("BnardStr_SproperID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BnardStr_SproperID"));

                    b.Property<int>("BnardStr_NomStr")
                        .HasColumnType("int");

                    b.Property<int>("Sproper_NomStr")
                        .HasColumnType("int");

                    b.HasKey("BnardStr_SproperID");

                    b.HasIndex("BnardStr_NomStr");

                    b.HasIndex("Sproper_NomStr");

                    b.ToTable("BnardStr_Sproper", "dbo");
                });

            modelBuilder.Entity("NardSmena.Models.Brab", b =>
                {
                    b.Property<int>("NomStr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NomStr"));

                    b.Property<int>("ExtNom")
                        .HasColumnType("int");

                    b.Property<double>("KTU")
                        .HasColumnType("float");

                    b.Property<short>("KodOpl")
                        .HasColumnType("smallint");

                    b.Property<double>("SumAll")
                        .HasColumnType("float");

                    b.Property<int>("TabNomer")
                        .HasColumnType("int");

                    b.Property<double>("TimeAll")
                        .HasColumnType("float");

                    b.HasKey("NomStr");

                    b.HasIndex("ExtNom");

                    b.HasIndex("TabNomer");

                    b.ToTable("Brab", "dbo");
                });

            modelBuilder.Entity("NardSmena.Models.Kerna", b =>
                {
                    b.Property<int>("Empty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Empty"));

                    b.Property<double>("Count")
                        .HasColumnType("float");

                    b.Property<DateTime>("Days")
                        .HasColumnType("datetime2");

                    b.Property<string>("FIO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodDetal")
                        .HasColumnType("nvarchar(450)");

                    b.Property<short>("KodOperation")
                        .HasColumnType("smallint");

                    b.Property<short>("KodOpl")
                        .HasColumnType("smallint");

                    b.Property<short>("Moon")
                        .HasColumnType("smallint");

                    b.Property<string>("NameDetal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOperation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TabNomer")
                        .HasColumnType("int");

                    b.Property<short>("Uch")
                        .HasColumnType("smallint");

                    b.HasKey("Empty");

                    b.HasIndex("KodDetal");

                    b.HasIndex("TabNomer");

                    b.ToTable("Kerna", "dbo");
                });

            modelBuilder.Entity("NardSmena.Models.KorUch", b =>
                {
                    b.Property<int>("ExtNom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExtNom"));

                    b.Property<double>("CountN")
                        .HasColumnType("float");

                    b.Property<double>("Count_old")
                        .HasColumnType("float");

                    b.Property<DateTime>("Days")
                        .HasColumnType("datetime2");

                    b.Property<string>("KodDetal")
                        .HasColumnType("nvarchar(450)");

                    b.Property<short>("KodOperation")
                        .HasColumnType("smallint");

                    b.Property<short>("KodOpl")
                        .HasColumnType("smallint");

                    b.Property<string>("Komment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Moon")
                        .HasColumnType("smallint");

                    b.Property<string>("NameDetal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Raznica")
                        .HasColumnType("float");

                    b.Property<DateTime>("SysDat")
                        .HasColumnType("datetime2");

                    b.Property<int>("TabNomer")
                        .HasColumnType("int");

                    b.HasKey("ExtNom");

                    b.HasIndex("KodDetal");

                    b.HasIndex("TabNomer");

                    b.ToTable("KorUch", "dbo");
                });

            modelBuilder.Entity("NardSmena.Models.MsFndVr", b =>
                {
                    b.Property<int>("PN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PN"));

                    b.Property<int>("MFVrem")
                        .HasColumnType("int");

                    b.Property<short>("Mesec")
                        .HasColumnType("smallint");

                    b.Property<string>("NaimMes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PN");

                    b.ToTable("MsFndVr", "dbo");
                });

            modelBuilder.Entity("NardSmena.Models.Nach", b =>
                {
                    b.Property<string>("POB")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DATEOPL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("KOD")
                        .HasColumnType("float");

                    b.Property<double>("SUMMA")
                        .HasColumnType("float");

                    b.Property<double>("TAB")
                        .HasColumnType("float");

                    b.Property<double>("TIMEOPL")
                        .HasColumnType("float");

                    b.HasKey("POB");

                    b.ToTable("Nach", "dbo");
                });

            modelBuilder.Entity("NardSmena.Models.Nard", b =>
                {
                    b.Property<int>("ExtNom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExtNom"));

                    b.Property<short>("KodOpl")
                        .HasColumnType("smallint");

                    b.Property<short>("Moon")
                        .HasColumnType("smallint");

                    b.Property<string>("NameNariada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Selected")
                        .HasColumnType("tinyint");

                    b.Property<double>("SumAll")
                        .HasColumnType("float");

                    b.Property<int>("TabNomer")
                        .HasColumnType("int");

                    b.Property<double>("TimeAll")
                        .HasColumnType("float");

                    b.HasKey("ExtNom");

                    b.HasIndex("TabNomer");

                    b.ToTable("Nard", "dbo");
                });

            modelBuilder.Entity("NardSmena.Models.NardStr", b =>
                {
                    b.Property<int>("NomStr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NomStr"));

                    b.Property<double>("Count")
                        .HasColumnType("float");

                    b.Property<short>("Day")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Days")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExtNom")
                        .HasColumnType("int");

                    b.Property<string>("KodiOperation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rascenka")
                        .HasColumnType("float");

                    b.Property<string>("ShifrDetal")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Time")
                        .HasColumnType("float");

                    b.HasKey("NomStr");

                    b.HasIndex("ExtNom");

                    b.HasIndex("ShifrDetal");

                    b.ToTable("NardStr", "dbo");
                });

            modelBuilder.Entity("NardSmena.Models.NardStr_Sproper", b =>
                {
                    b.Property<int>("NardStr_SproperID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NardStr_SproperID"));

                    b.Property<int>("NardStr_NomStr")
                        .HasColumnType("int");

                    b.Property<int>("Sproper_NomStr")
                        .HasColumnType("int");

                    b.HasKey("NardStr_SproperID");

                    b.HasIndex("NardStr_NomStr");

                    b.HasIndex("Sproper_NomStr");

                    b.ToTable("NardStr_Sproper", "dbo");
                });

            modelBuilder.Entity("NardSmena.Models.OtpVred", b =>
                {
                    b.Property<int>("PN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PN"));

                    b.Property<short>("GodOtpVr")
                        .HasColumnType("smallint");

                    b.Property<short>("ProcDopl")
                        .HasColumnType("smallint");

                    b.HasKey("PN");

                    b.ToTable("OtpVred", "dbo");
                });

            modelBuilder.Entity("NardSmena.Models.PROFF", b =>
                {
                    b.Property<short>("KodProf")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("KodProf"));

                    b.Property<string>("NameProf")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KodProf");

                    b.ToTable("PROFF", "dbo");
                });

            modelBuilder.Entity("NardSmena.Models.RKalend", b =>
                {
                    b.Property<int>("Npp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Npp"));

                    b.Property<DateTime>("DataR")
                        .HasColumnType("datetime2");

                    b.HasKey("Npp");

                    b.ToTable("RKalend", "dbo");
                });

            modelBuilder.Entity("NardSmena.Models.RoleAssignmentViewModel", b =>
                {
                    b.Property<int>("RoleAssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleAssignmentId"));

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FIO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelectedRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleAssignmentId");

                    b.ToTable("RoleAssignmentViewModels", "dbo");
                });

            modelBuilder.Entity("NardSmena.Models.SPRMETAL", b =>
                {
                    b.Property<int>("NPP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NPP"));

                    b.Property<string>("EIZ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GOST")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KMAT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KODTN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NMAT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNMAT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PODGR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RAZMER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("UDVES")
                        .HasColumnType("float");

                    b.Property<byte?>("VNORMA")
                        .HasColumnType("tinyint");

                    b.HasKey("NPP");

                    b.ToTable("SPRMETAL", "dbo");
                });

            modelBuilder.Entity("NardSmena.Models.SPRRAB", b =>
                {
                    b.Property<int>("TabNomer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TabNomer"));

                    b.Property<short>("Ceh")
                        .HasColumnType("smallint");

                    b.Property<string>("FIO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Kategoria")
                        .HasColumnType("smallint");

                    b.Property<short>("KodProfessii")
                        .HasColumnType("smallint");

                    b.Property<short>("Uch")
                        .HasColumnType("smallint");

                    b.HasKey("TabNomer");

                    b.HasIndex("KodProfessii");

                    b.ToTable("SPRRAB", "dbo");
                });

            modelBuilder.Entity("NardSmena.Models.ShifrDet", b =>
                {
                    b.Property<string>("ShifrDetal")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("KodDetal")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ShifrDetal");

                    b.HasIndex("KodDetal");

                    b.ToTable("ShifrDet", "dbo");
                });

            modelBuilder.Entity("NardSmena.Models.SprDet", b =>
                {
                    b.Property<string>("KodDetal")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NameDetal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("PrDopPrem")
                        .HasColumnType("smallint");

                    b.Property<bool>("Selected")
                        .HasColumnType("bit");

                    b.Property<string>("ShifrDetal")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KodDetal");

                    b.ToTable("SprDet", "dbo");
                });

            modelBuilder.Entity("NardSmena.Models.Sproper", b =>
                {
                    b.Property<int>("NomStr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NomStr"));

                    b.Property<short>("DpPrem")
                        .HasColumnType("smallint");

                    b.Property<short>("FlagObhoda")
                        .HasColumnType("smallint");

                    b.Property<short>("GrTarif")
                        .HasColumnType("smallint");

                    b.Property<string>("KodDetal")
                        .HasColumnType("nvarchar(450)");

                    b.Property<short>("KodOperation")
                        .HasColumnType("smallint");

                    b.Property<double>("KoefDV")
                        .HasColumnType("float");

                    b.Property<string>("NameOperation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Procent")
                        .HasColumnType("float");

                    b.Property<double>("Rascenka")
                        .HasColumnType("float");

                    b.Property<short>("Razriad")
                        .HasColumnType("smallint");

                    b.Property<double>("TimeComput")
                        .HasColumnType("float");

                    b.Property<double>("TimeOperation")
                        .HasColumnType("float");

                    b.Property<double>("Vrednost")
                        .HasColumnType("float");

                    b.HasKey("NomStr");

                    b.HasIndex("KodDetal");

                    b.HasIndex("Razriad");

                    b.ToTable("Sproper", "dbo");
                });

            modelBuilder.Entity("NardSmena.Models.Sravnenie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<short>("GrTarif")
                        .HasColumnType("smallint");

                    b.Property<short>("GrTarif_1")
                        .HasColumnType("smallint");

                    b.Property<string>("KodDetal")
                        .HasColumnType("nvarchar(450)");

                    b.Property<short>("KodOperation")
                        .HasColumnType("smallint");

                    b.Property<double>("Rascenka")
                        .HasColumnType("float");

                    b.Property<double>("Rascenka_1")
                        .HasColumnType("float");

                    b.Property<short>("Razriad")
                        .HasColumnType("smallint");

                    b.Property<short>("Razriad_1")
                        .HasColumnType("smallint");

                    b.Property<double>("TimeOperation")
                        .HasColumnType("float");

                    b.Property<double>("TimeOperation_1")
                        .HasColumnType("float");

                    b.Property<double>("Vrednost")
                        .HasColumnType("float");

                    b.Property<double>("Vrednost_1")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("KodDetal");

                    b.HasIndex("Razriad");

                    b.ToTable("Sravnenie", "dbo");
                });

            modelBuilder.Entity("NardSmena.Models.TARIF", b =>
                {
                    b.Property<short>("Razriad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Razriad"));

                    b.Property<double>("MTarif")
                        .HasColumnType("float");

                    b.Property<double>("Tarif")
                        .HasColumnType("float");

                    b.Property<double>("Tarif1")
                        .HasColumnType("float");

                    b.Property<double>("Tarif3")
                        .HasColumnType("float");

                    b.HasKey("Razriad");

                    b.ToTable("TARIF", "dbo");
                });

            modelBuilder.Entity("NardSmena.Models.Tabel", b =>
                {
                    b.Property<int>("ExtNom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExtNom"));

                    b.Property<short>("KodOpl")
                        .HasColumnType("smallint");

                    b.Property<short>("Moon")
                        .HasColumnType("smallint");

                    b.Property<short>("NormoVremia")
                        .HasColumnType("smallint");

                    b.Property<double>("PrVip")
                        .HasColumnType("float");

                    b.Property<double>("SumAll")
                        .HasColumnType("float");

                    b.Property<int>("TabNomer")
                        .HasColumnType("int");

                    b.Property<short>("TimeFact")
                        .HasColumnType("smallint");

                    b.HasKey("ExtNom");

                    b.HasIndex("TabNomer");

                    b.ToTable("Tabel", "dbo");
                });

            modelBuilder.Entity("NardSmena.Models.UchDet", b =>
                {
                    b.Property<int>("ExtNom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExtNom"));

                    b.Property<short>("Ceh")
                        .HasColumnType("smallint");

                    b.Property<double>("Count")
                        .HasColumnType("float");

                    b.Property<short>("Day")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Days")
                        .HasColumnType("datetime2");

                    b.Property<string>("FIO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodDetal")
                        .HasColumnType("nvarchar(450)");

                    b.Property<short>("KodOperation")
                        .HasColumnType("smallint");

                    b.Property<short>("KodOpl")
                        .HasColumnType("smallint");

                    b.Property<short>("Moon")
                        .HasColumnType("smallint");

                    b.Property<string>("NameDetal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOperation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NomStr")
                        .HasColumnType("int");

                    b.Property<int>("TabNomer")
                        .HasColumnType("int");

                    b.Property<short>("Uch")
                        .HasColumnType("smallint");

                    b.HasKey("ExtNom");

                    b.HasIndex("KodDetal");

                    b.HasIndex("NomStr");

                    b.ToTable("UchDet", "dbo");
                });

            modelBuilder.Entity("NardSmena.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FIO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("NardSmena.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("NardSmena.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NardSmena.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("NardSmena.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NardSmena.Models.BRab_Korr", b =>
                {
                    b.HasOne("NardSmena.Models.Tabel", "Tabel")
                        .WithMany()
                        .HasForeignKey("ExtNom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tabel");
                });

            modelBuilder.Entity("NardSmena.Models.BnardStr", b =>
                {
                    b.HasOne("NardSmena.Models.Bnard", "Bnard")
                        .WithMany()
                        .HasForeignKey("ExtNom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NardSmena.Models.ShifrDet", "ShifrDet")
                        .WithMany()
                        .HasForeignKey("ShifrDetal");

                    b.Navigation("Bnard");

                    b.Navigation("ShifrDet");
                });

            modelBuilder.Entity("NardSmena.Models.BnardStr_Sproper", b =>
                {
                    b.HasOne("NardSmena.Models.BnardStr", "BnardStr")
                        .WithMany()
                        .HasForeignKey("BnardStr_NomStr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NardSmena.Models.Sproper", "Sproper")
                        .WithMany()
                        .HasForeignKey("Sproper_NomStr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BnardStr");

                    b.Navigation("Sproper");
                });

            modelBuilder.Entity("NardSmena.Models.Brab", b =>
                {
                    b.HasOne("NardSmena.Models.Bnard", "Bnard")
                        .WithMany()
                        .HasForeignKey("ExtNom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NardSmena.Models.SPRRAB", "SPRRAB")
                        .WithMany()
                        .HasForeignKey("TabNomer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bnard");

                    b.Navigation("SPRRAB");
                });

            modelBuilder.Entity("NardSmena.Models.Kerna", b =>
                {
                    b.HasOne("NardSmena.Models.SprDet", "SprDet")
                        .WithMany()
                        .HasForeignKey("KodDetal");

                    b.HasOne("NardSmena.Models.SPRRAB", "SPRRAB")
                        .WithMany()
                        .HasForeignKey("TabNomer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SPRRAB");

                    b.Navigation("SprDet");
                });

            modelBuilder.Entity("NardSmena.Models.KorUch", b =>
                {
                    b.HasOne("NardSmena.Models.SprDet", "SprDet")
                        .WithMany()
                        .HasForeignKey("KodDetal");

                    b.HasOne("NardSmena.Models.SPRRAB", "SPRRAB")
                        .WithMany()
                        .HasForeignKey("TabNomer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SPRRAB");

                    b.Navigation("SprDet");
                });

            modelBuilder.Entity("NardSmena.Models.Nard", b =>
                {
                    b.HasOne("NardSmena.Models.SPRRAB", "SPRRAB")
                        .WithMany()
                        .HasForeignKey("TabNomer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SPRRAB");
                });

            modelBuilder.Entity("NardSmena.Models.NardStr", b =>
                {
                    b.HasOne("NardSmena.Models.Nard", "Nard")
                        .WithMany()
                        .HasForeignKey("ExtNom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NardSmena.Models.ShifrDet", "ShifrDet")
                        .WithMany()
                        .HasForeignKey("ShifrDetal");

                    b.Navigation("Nard");

                    b.Navigation("ShifrDet");
                });

            modelBuilder.Entity("NardSmena.Models.NardStr_Sproper", b =>
                {
                    b.HasOne("NardSmena.Models.NardStr", "NardStr")
                        .WithMany()
                        .HasForeignKey("NardStr_NomStr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NardSmena.Models.Sproper", "Sproper")
                        .WithMany()
                        .HasForeignKey("Sproper_NomStr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NardStr");

                    b.Navigation("Sproper");
                });

            modelBuilder.Entity("NardSmena.Models.SPRRAB", b =>
                {
                    b.HasOne("NardSmena.Models.PROFF", "PROFF")
                        .WithMany()
                        .HasForeignKey("KodProfessii")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PROFF");
                });

            modelBuilder.Entity("NardSmena.Models.ShifrDet", b =>
                {
                    b.HasOne("NardSmena.Models.SprDet", "SprDet")
                        .WithMany()
                        .HasForeignKey("KodDetal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SprDet");
                });

            modelBuilder.Entity("NardSmena.Models.Sproper", b =>
                {
                    b.HasOne("NardSmena.Models.SprDet", "SprDet")
                        .WithMany()
                        .HasForeignKey("KodDetal");

                    b.HasOne("NardSmena.Models.TARIF", "TARIF")
                        .WithMany()
                        .HasForeignKey("Razriad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SprDet");

                    b.Navigation("TARIF");
                });

            modelBuilder.Entity("NardSmena.Models.Sravnenie", b =>
                {
                    b.HasOne("NardSmena.Models.SprDet", "SprDet")
                        .WithMany()
                        .HasForeignKey("KodDetal");

                    b.HasOne("NardSmena.Models.TARIF", "TARIF")
                        .WithMany()
                        .HasForeignKey("Razriad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SprDet");

                    b.Navigation("TARIF");
                });

            modelBuilder.Entity("NardSmena.Models.Tabel", b =>
                {
                    b.HasOne("NardSmena.Models.SPRRAB", "SPRRAB")
                        .WithMany()
                        .HasForeignKey("TabNomer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SPRRAB");
                });

            modelBuilder.Entity("NardSmena.Models.UchDet", b =>
                {
                    b.HasOne("NardSmena.Models.SprDet", "SprDet")
                        .WithMany()
                        .HasForeignKey("KodDetal");

                    b.HasOne("NardSmena.Models.NardStr", "NardStr")
                        .WithMany()
                        .HasForeignKey("NomStr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NardStr");

                    b.Navigation("SprDet");
                });
#pragma warning restore 612, 618
        }
    }
}
